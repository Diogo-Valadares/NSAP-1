namespace Assembler;
public enum Instructions
{
    NO_OP = 0x00,
    //Jump Instructions
    GO_TO = 0x01,
    JMP_EQ = 0x03,
    JMP_R = 0x04,
    JMP_OV = 0x05,
    /// RESERVED_FOR_JUMPS = 0x06 : 0x0F,
    //Loads - usually goes from RAM or Register to another Register
    LD_A = 0x10,
    LD_B = 0x11,
    LD_I_A = 0x12,
    LD_I_B = 0x13,
    LD_U_A = 0x14,
    LD_U_B = 0x15,
    LD_EQ_A = 0x16,
    LD_EQ_B = 0x17,
    /// RESERVED_FOR_LOADS = 0x18 : 0x1F,
    //Saves - Goes from somewhere to the RAM
    ST_A = 0x20,
    ST_B = 0x21,
    ST_U = 0x22,
    /// RESERVED_FOR_SAVES = 0x18 : 0x1F,
    //ULA instructions
    //  Logic
    NOT_A = 0x30,
    NOT_B = 0x31,
    AND = 0x32,
    NAND = 0x33,
    OR = 0x34,
    NOR = 0x35,
    XOR = 0x36,
    XNOR = 0x37,
    IMPLIES = 0x38,
    //  Shift
    LEFT_S = 0x39,
    RIGHT_S = 0x3A,
    //  Equality
    EQUALS = 0x3B,
    GREATER = 0x3C,
    GREATER_EQ = 0x3D,
    LESS = 0x3E,
    LESS_EQ = 0x3F,
    //  Misc Math
    MAX = 0x40,
    MIN = 0x41,
    /// RESERVED_FOR_MISC_MATH = 0x42 : 0x4E,
    RAND = 0x4F,
    // INT Math
    NEG_A = 0x50,
    NEG_B = 0x51,
    INC_A = 0x52,
    INC_B = 0x53,
    DEC_A = 0x54,
    DEC_B = 0x55,
    ADD = 0x56,
    SUB = 0x57,
    MUL = 0x58,
    MUL2 = 0x59,
    DIV = 0x5a,
    MOD = 0x5b,
    POW = 0x5c,
    ROOT = 0x5d,
    I_SQRT = 0x5e,
    /// RESERVED_FOR_INT_MATH = 0x59 : 0x5D,
    F_NEG_A = 0x60,
    F_NEG_B = 0x61,
    F_ADD = 0x62,
    F_SUB = 0x63,
    F_MUL = 0x64,
    F_DIV = 0x65,
    F_POW = 0x66,
    F_ROOT = 0x67,
    F_I_SQRT = 0x68,
    /// RESERVED_FOR_FLOAT_MATH = 0x67 : 0x6D,
    INT_A = 0x6C,
    INT_B = 0x6D,
    FLOAT_A = 0x6E,
    FLOAT_B = 0x6F,
    //Video Draw/Set Instructions
    DRAW = 0x70,
    V_SET = 0x71,
    V_SET_I = 0x72,
    V_SET_A = 0x73,
    V_SET_B = 0x74,
    V_SET_U = 0x75,
    CLR_COL = 0x8F,
    //Video Operations
    V_OP = 0x90,
    /// RESERVED_FOR_VIDEO_INSTRUCTIONS = 0x91 : 0xBD,
    CLR_DISPL = 0xBF,
    /// RESERVED_FOR_SYSTEM_MISC_INSTRUCTIONS = 0xCF : 0xFA,
    PRINT_A = 0xFB,
    PRINT_B = 0xFC,
    PRINT_U = 0xFD,
    PRINT_R = 0xFE,
    HALT = 0xFF,
}